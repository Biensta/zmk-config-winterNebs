/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define GAME    1
#define SYM     2
#define NAV     3
#define ADJ     4
&mt {
    tapping-term-ms = <170>;
    flavor = "tap-preferred";
};
/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
                timeout-ms = <50>;
                key-positions = <0 31>;
                bindings = <&kp ESC>;
        };
        combo_qot {
                timeout-ms = <50>;
                key-positions = <19 32>;
                bindings = <&kp SQT>;
        };
        combo_grv {
                timeout-ms = <50>;
                key-positions = <20 31>;
                bindings = <&kp GRAVE>;
        };
        combo_bs {
                timeout-ms = <50>;
                key-positions = <29 32>;
                bindings = <&kp BSLH>;
        };
        combo_del {
                timeout-ms = <50>;
                key-positions = <10 31>;
                bindings = <&kp DEL>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <SYM NAV>;
            then-layer = <ADJ>;
        };
    };

	keymap {
		compatible = "zmk,keymap";
                
        default_layer {
            bindings = < 
            &kp Q       &kp D       &kp R       &kp W       &kp B       &kp J       &kp F       &kp U       &kp P       &kp SEMI 
            &mt LWIN A  &mt LALT S  &mt LCTRL H &mt LSHFT T &kp G       &kp Y       &mt RSHFT N &mt RCTRL E &mt RALT O  &mt RWIN I
            &kp Z       &kp X       &kp M       &kp C       &kp V       &kp K       &kp L       &kp COMMA   &kp DOT     &kp SLASH
                                                &lt SYM TAB &kp SPACE   &kp BSPC    &lt NAV ENTER
            >;
		};
        game_layer {
            bindings = < 
            &kp ESC     &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I     &kp O     
            &kp LSHFT   &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K     &kp L
            &kp LCTRL   &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M     &kp COMMA &kp DOT
                                            &lt SYM TAB &kp SPACE   &kp BSPC    &lt NAV ENTER
            >;
		};
        sym_layer {
            bindings = < 
            &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0  
            &kp DLLR    &kp PLUS    &kp LPAR    &kp RPAR    &kp AT      &kp PIPE    &kp MINUS   &kp EQUAL   &kp UNDER   &kp STAR
            &kp EXCL    &kp HASH    &kp LBRC    &kp RBRC    &kp TILDE   &kp AMPS    &kp LBKT    &kp RBKT    &kp PRCNT   &kp CARET 
                                                &trans      &kp PSCRN   &trans      &trans
            >;
		};
        nav_layer {
            bindings = < 
            &trans      &trans      &trans      &kp LC(RIGHT) &kp LC(LEFT) &kp DOWN &trans      &trans      &trans      &kp HOME
            &kp END     &trans      &kp LEFT    &trans      &trans      &trans      &trans      &trans      &trans      &trans      
            &trans      &trans      &trans      &trans      &trans      &kp UP      &kp RIGHT   &trans      &trans      &trans      
                                                &trans      &trans      &trans      &trans
            >;
		};
        
        adj_layer {
            bindings = < 
            &kp F1      &kp F2      &kp F3          &kp F4          &kp F5      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10  
            &kp F11     &bt BT_SEL 0 &bt BT_SEL 1   &out OUT_BLE    &trans      &trans      &trans      &trans      &trans      &kp F12      
            &bt BT_CLR  &bt BT_SEL 2 &bt BT_SEL 3   &to DEFAULT     &to GAME    &trans      &trans      &trans      &trans      &trans      
                                                &trans      &trans      &trans      &trans
            >;
		};
        /*
        nav_layer {
            bindings = < 
            &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      
            &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      
            &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      &trans      
                                                &trans      &trans      &trans      &trans
            >;
		};*/
	};
};
